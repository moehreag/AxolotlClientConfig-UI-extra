plugins {
	id 'java'
	id 'maven-publish'
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'ploceus' version '1.5-SNAPSHOT'
	id 'io.freefair.lombok' version '8.+'
}

base {
	archivesName = "${project.archives_base_name}"
}
version = "${project.version}+${project.minecraft_version}"
group = project.maven_group

repositories {
	maven {
		url = "https://moehreag.duckdns.org/maven/releases"
	}
	maven {
		url = "https://moehreag.duckdns.org/maven/snapshots"
	}
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		mappings "net.ornithemc:feather:${project.minecraft_version}+build.${project.feather_build}:v2"
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	ploceus.addCommonLibraries()
	ploceus.dependOsl(osl_version)

	api "io.github.axolotlclient.AxolotlClient-config:AxolotlClientConfig-common:${config_version}"

	modImplementation("com.terraformersmc:modmenu:0.2.0+mc${minecraft_version}")
}

project.processResources {
	filesMatching('fabric.mod.json') {
		expand project.properties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 8
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from('LICENSE') {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

runClient {
	classpath(sourceSets.test.runtimeClasspath)
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = archivesBaseName
			from components.java
		}
	}

	repositories {
		maven {
			name = "owlMaven"
			def repository = project.version.toString().contains("beta") || project.version.toString().contains("alpha") ? "snapshots" : "releases"
			url = "https://moehreag.duckdns.org/maven/" + repository
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}
}

